@model shopping_basket.Models.Order

@{
    ViewBag.Title = "Review Order";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Create","Orders")) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Order</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-2"> <label> Item </label></div>
        <div class="col-md-2"><label>Quantity</label></div>
        <div class="col-md-2"><label>Unit Price</label></div>
    </div>
    @foreach (var item in Model.OrderLines)
    {
        <div class="row">
            <div class="col-md-2">@Html.DisplayFor(modelItem => item.Product.Name)</div>
            <div class="col-md-2">@Html.DisplayFor(modelItem => item.Quantity)</div>
            <div class="col-md-2">@Html.DisplayFor(modelItem => item.UnitPrice)</div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new
        {
            @class =
       "control-label col-md-2"
        })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => Model.TotalPrice)
            @Html.HiddenFor(model => Model.TotalPrice)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeliveryName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeliveryName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeliveryName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeliveryAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeliveryAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeliveryAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.EditorFor(model => model.DeliveryAddress)
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
