@model shopping_basket.ViewModel.ProductIndexViewModel
@using PagedList
@using PagedList.Mvc

@{
    ViewBag.Title = "Products";
}

<h2>Products</h2>

<p>
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You search for " +
Model.Search + " found") @Model.Products.TotalItemCount products

@if (Request.IsAuthenticated && User.IsInRole("Admin"))
{
    @Html.ActionLink("Create New", "Create")
}

@using (Html.BeginRouteForm("ProductsIndex", FormMethod.Get))
{
    <label>Filter by category</label>
    @Html.DropDownListFor(vm => vm.Brand, Model.CatsFilterItem, "All");
    <label>Sort By:</label>
    @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default")
    <input type="submit" value="Filter" />
    <input type="hidden" name="Search" id="Search" value="@Model.Search" />
}
</p>
<table class="table">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Brand)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products.First().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products.First().Price)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Products)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID })
                        @Html.Raw(" | ")
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                        @Html.Raw(" | ")
                        @Html.ActionLink("Details", "Details", new { id = item.ID })
                    }
                    @if (Request.IsAuthenticated &&!User.IsInRole("Admin"))
                    {
                        @Html.ActionLink("Details", "Details", new { id = item.ID })

                    }

                </td>
            </tr>
        }

    </table>
    <div>
        Page @(Model.Products.PageCount < Model.Products.PageNumber ? 0 :
Model.Products.PageNumber) of @Model.Products.PageCount
@Html.PagedListPager(Model.Products, page => Url.Action("Index", new
{
category = @Model.Brand,
Search = @Model.Search,
sortBy = @Model.SortBy,
page
}))
</div>
